[{"/Users/paulbeck/Development/tinyfaas-interface/src/reportWebVitals.js":"1","/Users/paulbeck/Development/tinyfaas-interface/src/App.js":"2","/Users/paulbeck/Development/tinyfaas-interface/src/components/IpForm.js":"3","/Users/paulbeck/Development/tinyfaas-interface/src/components/UploadForm.js":"4","/Users/paulbeck/Development/tinyfaas-interface/src/hooks/useLocalStorage.js":"5","/Users/paulbeck/Development/tinyfaas-interface/src/index.js":"6"},{"size":362,"mtime":1610139599242,"results":"7","hashOfConfig":"8"},{"size":3211,"mtime":1610191279232,"results":"9","hashOfConfig":"8"},{"size":427,"mtime":1610188853582,"results":"10","hashOfConfig":"8"},{"size":1295,"mtime":1610191232444,"results":"11","hashOfConfig":"8"},{"size":1416,"mtime":1610187727674,"results":"12","hashOfConfig":"8"},{"size":500,"mtime":1610139599242,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"vea6dk",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/paulbeck/Development/tinyfaas-interface/src/reportWebVitals.js",[],"/Users/paulbeck/Development/tinyfaas-interface/src/App.js",["27"],"import { useEffect, useState } from \"react\";\nimport IpForm from \"./components/IpForm\";\nimport UploadForm from \"./components/UploadForm\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport tinyFaasFunctions from './tinyFaasFunctions.json'\n\nfunction App() {\n  const [tinyFaasIP, setTinyFaasIP] = useLocalStorage()\n  const [uploadWaiting, setUploadWaiting] = useState(false)\n  const [functions, setFunctions] = useState([])\n\n  const fetchFunctions = async () => {\n    try {\n      const response = await fetch(tinyFaasIP + \":8080/list\")\n      const functions = await response.json()\n      setFunctions(functions)\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  const upload = async (data) => {\n    try {\n      setUploadWaiting(true);\n      await fetch(tinyFaasIP + \":8080/uploadFromUrl\", {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        body: JSON.stringify(data)\n      });\n      fetchFunctions()\n    }\n    catch (e) {\n      console.log(e)\n    }\n    setUploadWaiting(false)\n  }\n\n  const deleteFunction = async (functionName) => {\n    try {\n      await fetch(tinyFaasIP + \":8080/delete\", {\n        method: 'POST',\n        mode: 'cors',\n        redirect: 'follow',\n        body: functionName\n      });\n      fetchFunctions()\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    if (!tinyFaasIP) {\n      return []\n    }\n    fetchFunctions()\n  }, [tinyFaasIP])\n\n  if (!tinyFaasIP) {\n    return <IpForm setTinyFaasIp={setTinyFaasIP} />\n  }\n\n  return (\n    <div className=\"tfi-page-wrapper\">\n      <nav className=\"tfi-navigation\">\n        <h1>TinyFaas Interface</h1>\n      </nav>\n      <div>\n        <p>Connected to tinyFaas at <span className=\"tfi-host-label\">{tinyFaasIP}</span></p>\n        <button onClick={() => setTinyFaasIP()}>disconnect</button>\n      </div>\n      <div>\n        <h2>Functions Running</h2>\n        {functions.length === 0 ? <p>No functions are running currently.</p> : \"\"}\n        <div className=\"tfi-functions-card-wrapper\">\n          {functions.map(f => <div className=\"tfi-function-card\">\n            <p><b>Name:</b> {f.name}</p>\n            <p><b>Threads:</b> {f.threads}</p>\n            <p><b>Resource:</b> {f.resource}</p>\n            <button onClick={() => deleteFunction(f.name)}>delete</button>\n          </div>)}\n        </div>\n      </div>\n      <div>\n        <UploadForm upload={upload} uploadWaiting={uploadWaiting} />\n      </div>\n      <div>\n        <h2>Public functions</h2>\n        <div className=\"tfi-functions-card-wrapper\">\n          {tinyFaasFunctions.map(f => <div className=\"tfi-function-card\">\n            <p><b>Name:</b> {f.name}</p>\n            <p><b>URL:</b> {f.url}</p>\n            <p><b>Threads:</b> {f.threads}</p>\n            <p><b>Env:</b> {JSON.stringify(f.environment)}</p>\n            <p><b>subfolder_path:</b> {f.subfolder_path}</p>\n            <p><b>Base64 encoded:</b> {f.base64_encoded ? \"True\" : \"False\"}</p>\n            {uploadWaiting ? <div class=\"loader\"></div> : <button onClick={() => upload(f)}>deploy</button>}\n          </div>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/paulbeck/Development/tinyfaas-interface/src/components/IpForm.js",[],"/Users/paulbeck/Development/tinyfaas-interface/src/components/UploadForm.js",[],"/Users/paulbeck/Development/tinyfaas-interface/src/hooks/useLocalStorage.js",[],"/Users/paulbeck/Development/tinyfaas-interface/src/index.js",[],{"ruleId":"28","severity":1,"message":"29","line":63,"column":6,"nodeType":"30","endLine":63,"endColumn":18,"suggestions":"31"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchFunctions'. Either include it or remove the dependency array.","ArrayExpression",["32"],{"desc":"33","fix":"34"},"Update the dependencies array to be: [fetchFunctions, tinyFaasIP]",{"range":"35","text":"36"},[1493,1505],"[fetchFunctions, tinyFaasIP]"]