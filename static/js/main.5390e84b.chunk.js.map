{"version":3,"sources":["components/IpForm.js","components/UploadForm.js","App.js","hooks/useLocalStorage.js","reportWebVitals.js","index.js"],"names":["IpForm","setTinyFaasIp","useState","ip","setIp","className","htmlFor","name","value","onChange","event","target","onClick","UploadForm","upload","uploadWaiting","uploadData","setUploadData","update","key","url","subfolder_path","class","App","initialValue","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","tinyFaasIP","setTinyFaasIP","setUploadWaiting","functions","setFunctions","fetchFunctions","a","fetch","response","json","data","method","mode","headers","redirect","body","deleteFunction","functionName","useEffect","length","map","f","threads","resource","tinyFaasFunctions","environment","base64_encoded","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5390e84b.chunk.js","sourcesContent":["import { useState } from \"react\"\n\nexport default function IpForm({ setTinyFaasIp }) {\n    const [ip, setIp] = useState(\"\")\n\n    return <div className=\"tfi-form\">\n        <h2>Set Ip</h2>\n        <div>\n            <label htmlFor=\"ip\">Host</label>\n            <input name=\"ip\" value={ip} onChange={(event) => setIp(event.target.value)} />\n        </div>\n        <button onClick={() => setTinyFaasIp(ip)}>Save</button>\n    </div>\n}","import { useState } from \"react\"\n\nexport default function UploadForm({ upload, uploadWaiting }) {\n    const [uploadData, setUploadData] = useState({\n        \"name\": \"\",\n        \"threads\": 2,\n        \"environment\": {},\n        \"subfolder_path\": \"\",\n        \"base64_encoded\": false\n    })\n\n    const update = (event, key) => setUploadData({ ...uploadData, [key]: event.target.value })\n\n    return (\n        <div className=\"tfi-form\">\n            <h2>Deploy new function</h2>\n            <div>\n                <div>\n                    <label htmlFor=\"url\">URL</label>\n                    <input name=\"url\" value={uploadData.url} onChange={(event) => update(event, \"url\")} />\n                </div>\n                <div>\n                    <label htmlFor=\"name\">Name</label>\n                    <input value={uploadData.name} onChange={(event) => update(event, \"name\")} />\n                </div>\n                <div>\n                    <label htmlFor=\"subfolder_path\">Subfolder path</label>\n                    <input value={uploadData.subfolder_path} onChange={(event) => update(event, \"subfolder_path\")} />\n                </div>\n                {uploadWaiting ? <div class=\"loader\"></div> : <button onClick={() => upload(uploadData)}>Upload</button>}\n            </div>\n        </div>\n    )\n}","import { useEffect, useState } from \"react\";\nimport IpForm from \"./components/IpForm\";\nimport UploadForm from \"./components/UploadForm\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\nimport tinyFaasFunctions from './tinyFaasFunctions.json'\n\nfunction App() {\n  const [tinyFaasIP, setTinyFaasIP] = useLocalStorage()\n  const [uploadWaiting, setUploadWaiting] = useState(false)\n  const [functions, setFunctions] = useState([])\n\n  const fetchFunctions = async () => {\n    try {\n      const response = await fetch(tinyFaasIP + \":8080/list\")\n      const functions = await response.json()\n      setFunctions(functions)\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  const upload = async (data) => {\n    try {\n      setUploadWaiting(true);\n      await fetch(tinyFaasIP + \":8080/uploadFromUrl\", {\n        method: 'POST',\n        mode: 'cors',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        body: JSON.stringify(data)\n      });\n      fetchFunctions()\n    }\n    catch (e) {\n      console.log(e)\n    }\n    setUploadWaiting(false)\n  }\n\n  const deleteFunction = async (functionName) => {\n    try {\n      await fetch(tinyFaasIP + \":8080/delete\", {\n        method: 'POST',\n        mode: 'cors',\n        redirect: 'follow',\n        body: functionName\n      });\n      fetchFunctions()\n    }\n    catch (e) {\n      console.log(e)\n    }\n  }\n\n  useEffect(() => {\n    if (!tinyFaasIP) {\n      return []\n    }\n    fetchFunctions()\n  }, [tinyFaasIP])\n\n  if (!tinyFaasIP) {\n    return <IpForm setTinyFaasIp={setTinyFaasIP} />\n  }\n\n  return (\n    <div className=\"tfi-page-wrapper\">\n      <nav className=\"tfi-navigation\">\n        <h1>TinyFaas Interface</h1>\n      </nav>\n      <div>\n        <p>Connected to tinyFaas at <span className=\"tfi-host-label\">{tinyFaasIP}</span></p>\n        <button onClick={() => setTinyFaasIP()}>disconnect</button>\n      </div>\n      <div>\n        <h2>Functions Running</h2>\n        {functions.length === 0 ? <p>No functions are running currently.</p> : \"\"}\n        <div className=\"tfi-functions-card-wrapper\">\n          {functions.map(f => <div className=\"tfi-function-card\">\n            <p><b>Name:</b> {f.name}</p>\n            <p><b>Threads:</b> {f.threads}</p>\n            <p><b>Resource:</b> {f.resource}</p>\n            <button onClick={() => deleteFunction(f.name)}>delete</button>\n          </div>)}\n        </div>\n      </div>\n      <div>\n        <UploadForm upload={upload} uploadWaiting={uploadWaiting} />\n      </div>\n      <div>\n        <h2>Public functions</h2>\n        <div className=\"tfi-functions-card-wrapper\">\n          {tinyFaasFunctions.map(f => <div className=\"tfi-function-card\">\n            <p><b>Name:</b> {f.name}</p>\n            <p><b>URL:</b> {f.url}</p>\n            <p><b>Threads:</b> {f.threads}</p>\n            <p><b>Env:</b> {JSON.stringify(f.environment)}</p>\n            <p><b>subfolder_path:</b> {f.subfolder_path}</p>\n            <p><b>Base64 encoded:</b> {f.base64_encoded ? \"True\" : \"False\"}</p>\n            {uploadWaiting ? <div class=\"loader\"></div> : <button onClick={() => upload(f)}>deploy</button>}\n          </div>)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n\n    // State to store our value\n\n    // Pass initial state function to useState so logic is only executed once\n\n    const [storedValue, setStoredValue] = useState(() => {\n\n        try {\n\n            // Get from local storage by key\n\n            const item = window.localStorage.getItem(key);\n\n            // Parse stored json or if none return initialValue\n\n            return item ? JSON.parse(item) : initialValue;\n\n        } catch (error) {\n\n            // If error also return initialValue\n\n            console.log(error);\n\n            return initialValue;\n\n        }\n\n    });\n\n\n\n    // Return a wrapped version of useState's setter function that ...\n\n    // ... persists the new value to localStorage.\n\n    const setValue = value => {\n\n        try {\n\n            // Allow value to be a function so we have same API as useState\n\n            const valueToStore =\n\n                value instanceof Function ? value(storedValue) : value;\n\n            // Save state\n\n            setStoredValue(valueToStore);\n\n            // Save to local storage\n\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\n\n        } catch (error) {\n\n            // A more advanced implementation would handle the error case\n\n            console.log(error);\n\n        }\n\n    };\n\n\n\n    return [storedValue, setValue];\n\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}